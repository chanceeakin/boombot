var Promise, config, dnsmasq, exec, execAsync, hostapd, modprobe, ref, spawn, started;

Promise = require('bluebird');

ref = require('child_process'), spawn = ref.spawn, exec = ref.exec;

execAsync = Promise.promisify(exec);

config = require('./config');

hostapd = require('./hostapd');

dnsmasq = require('./dnsmasq');

modprobe = require('./modprobe');

started = false;

exports.start = function(manager, device) {
  if (started) {
    return Promise.resolve();
  }
  started = true;
  console.log('Starting hotspot');
  return modprobe.hotspot(device).then(function() {
    return manager.stop();
  }).then(function() {
    return execAsync('rfkill unblock wifi');
  }).then(function() {
    return execAsync("ip addr add " + config.gateway + "/24 dev " + config.iface + " || true");
  }).then(function() {
    return hostapd.start();
  }).then(function() {
    return dnsmasq.start();
  }).then(function() {
    return console.log('Started hotspot');
  });
};

exports.stop = function(manager, device) {
  if (!started) {
    return Promise.resolve();
  }
  started = false;
  console.log('Stopping hotspot');
  return modprobe.normal(device).then(function() {
    return hostapd.stop();
  }).then(function() {
    return dnsmasq.stop();
  }).then(function() {
    return manager.start();
  }).then(function() {
    return console.log('Stopped hotspot');
  });
};

// ---
// generated by coffee-script 1.9.2
