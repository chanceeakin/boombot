var Promise, _, child_process, config,
  hasProp = {}.hasOwnProperty;

Promise = require('bluebird');

child_process = Promise.promisifyAll(require('child_process'));

_ = require('lodash');

config = require('./config');

exports.scanAsync = function() {
  return child_process.execAsync("iw " + config.iface + " scan ap-force").then(function(output) {
    var bss, bsss, details, i, len, line, match, networks, ref, token, value;
    bsss = {};
    bss = null;
    ref = output.split('\n');
    for (i = 0, len = ref.length; i < len; i++) {
      line = ref[i];
      match = line.match(/^(\t?[A-Za-z]+):? (.*)$/);
      if (match !== null) {
        token = match[1];
        value = match[2];
        switch (token) {
          case 'BSS':
            bss = value.slice(0, 17);
            bsss[bss] = {};
            break;
          case '\tSSID':
            bsss[bss].ssid = value || null;
            break;
          case '\tsignal':
            bsss[bss].signal = Number(value.split(' ')[0]);
        }
      }
    }
    networks = [];
    for (bss in bsss) {
      if (!hasProp.call(bsss, bss)) continue;
      details = bsss[bss];
      networks.push(details);
    }
    networks = _(networks).orderBy('signal', 'desc').uniqBy('ssid').value();
    return networks;
  })["catch"]({
    code: 240
  }, function(e) {
    return Promise.delay(1000).then(exports.scanAsync);
  });
};

// ---
// generated by coffee-script 1.9.2
