var Promise, config, configFile, fs, ps, spawn;

Promise = require('bluebird');

fs = Promise.promisifyAll(require('fs'));

spawn = require('child_process').spawn;

config = require('./config');

ps = null;

configFile = "/tmp/hostapd-" + config.iface + ".conf";

exports.start = function() {
  var cfg;
  cfg = "ssid=" + config.ssid + "\ninterface=" + config.iface + "\nchannel=6\n";
  if (config.passphrase != null) {
    cfg += "wpa=2\nwpa_passphrase=" + config.passphrase + "\n";
  }
  console.log('Starting hostapd..');
  return fs.writeFileAsync(configFile, cfg).then(function() {
    ps = spawn('hostapd', [configFile]);
    ps.stdout.pipe(process.stdout);
    return ps.stderr.pipe(process.stderr);
  });
};

exports.stop = function() {
  if (ps === null || (ps.exitCode != null) || (ps.signalCode != null)) {
    return Promise.resolve();
  }
  return new Promise(function(resolve, reject) {
    var timeout;
    console.log('Stopping hostapd..');
    ps.kill('SIGTERM');
    timeout = setTimeout(function() {
      return ps.kill('SIGKILL');
    });
    return ps.on('exit', function() {
      clearTimeout(timeout);
      return resolve();
    });
  });
};

// ---
// generated by coffee-script 1.9.2
